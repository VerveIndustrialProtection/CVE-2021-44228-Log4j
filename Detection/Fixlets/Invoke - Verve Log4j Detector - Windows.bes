<?xml version="1.0" encoding="UTF-8"?>
<BES xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="BES.xsd">
	<Fixlet>
		<Title>Invoke - Verve Log4j Detector - Windows</Title>
		<Description><![CDATA[<P>This invokes the Verve Log4j Detector to look for open file handles of Log4j JAR files.</P>
<P>This will only be relevant on systems with java, javac, javaw, or&nbsp;javadoc&nbsp;currently running.</P>
<P>This outputs the file in a known location so it can be read by a BigFix analysis.</P>
<P>The primary action on this fixlet produces the file to be ingested by the analysis and writes the results to the Windows Event Log and requires Powershell. On machines without powershell the fixlet still performs the detection but does not log to the Windows event log.</P>
<P>The secondary action on this fixlet just produces the file to be ingested by the analysis and does not require powershell.</P>
<P><STRONG>Testing</STRONG><BR>You should always test all BigFix content on a representative set of test systems before applying it to production systems. Do not apply content you have not reviewed, tested, and have a real understanding of how it will impact your systems.</P>
<P><STRONG>Copyright Verve Industrial Protection 2021</STRONG><BR>This content is produced, maintained and copyrighted by Verve Industrial Protection. You may use and distribute this content freely but you may not remove this notice. If you modify this content or derive other content from this content you must make the modified content available for free under these same terms. This content carries no Express or Implied Warranty. THE LICENSED PROPERTY IS PROVIDED "AS IS", WITH ALL FAULTS. THERE ARE NO WARRANTIES OR GUARANTEES, EXPRESS OR IMPLIED, RELATING TO THE VERVE INDUSTRIAL PROTECTION IP, THE PROPRIETARY KNOWLEDGE, OR OTHER SERVICES OR PRODUCTS TO BE PROVIDED HEREUNDER, OR ANY PROSPECTS OR OUTCOME THEREOF. VERVE INDUSTRIAL PROTECTION DISCLAIMS ANY AND ALL, AND INSTRUCTOR ACKNOWLEDGES AND AGREES THAT THERE ARE NO, REPRESENTATIONS, WARRANTIES, COVENANTS, OR CONDITIONS, WHETHER EXPRESS, IMPLIED, ARISING AT LAW, IN EQUITY, OR BY CUSTOM OF TRADE, STATUTORY OR OTHERWISE, ORAL OR WRITTEN, INCLUDING WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, TITLE OR QUIET ENJOYMENT. FURTHER, VERVE INDUSTRIAL PROTECTION DOES NOT WARRANT THAT THE LICENSED PROPERTY IS ERROR-FREE OR WILL BE AVAILABLE AT ALL TIMES OR OPERATE WITHOUT INTERRUPTION. NO ORAL OR WRITTEN INFORMATION OR ADVICE GIVEN BY VERVE INDUSTRIAL PROTECTION, ITS AGENTS, OR ITS EMPLOYEES, AT ANY TIME SHALL CREATE A WARRANTY OF ANY KIND. SOME STATES OR JURISDICTIONS DO NOT ALLOW THE EXCLUSION OF EXPRESS OR IMPLIED WARRANTIES, SO THE ABOVE EXCLUSION MAY NOT APPLY TO YOU. IN THAT EVENT, WARRANTIES SHALL ONLY BE IMPOSED TO THE EXTENT DETERMINED BY A COURT OF COMPETENT JURISDICTION AS REQUIRED BY APPLICABLE LAW.<BR></P>]]></Description>
		<Relevance>Windows of Operating System</Relevance>
		<Relevance><![CDATA[version of operating system >= "5.1"]]></Relevance>
		<Relevance>exists (processes ("java.exe";"javaw.exe";"javac.exe";"javadoc.exe"))</Relevance>
		<Relevance><![CDATA[not exists files "openhandles.log" whose (modification time of it > (now - (30 * minute))) of folders "/__Global/Verve/Detections/Log4j" of folders (pathname of data folder of client)]]></Relevance>
		<Category></Category>
		<Source>Verve Industrial Protection</Source>
		<SourceID></SourceID>
		<SourceReleaseDate>2021-12-14</SourceReleaseDate>
		<SourceSeverity></SourceSeverity>
		<CVENames></CVENames>
		<SANSID></SANSID>
		<MIMEField>
			<Name>x-fixlet-modification-time</Name>
			<Value>Fri, 17 Dec 2021 00:29:32 +0000</Value>
		</MIMEField>
		<Domain>BESC</Domain>
		<DefaultAction ID="Action2">
			<Description>
				<PreLink>Click </PreLink>
				<Link>here</Link>
				<PostLink> to run the scanner and write parsed results to the Windows Application Log.</PostLink>
			</Description>
			<ActionScript MIMEType="application/x-Fixlet-Windows-Shell"><![CDATA[action uses wow64 redirection {not x64 of operating system}

prefetch unzip.exe sha1:E1652B058195DB3F5F754B7AB430652AE04A50B8 size:167936 http://software.bigfix.com/download/redist/unzip-5.52.exe sha256:8D9B5190AACE52A1DB1AC73A65EE9999C329157C8E88F61A772433323D6B7A4A

if {version of operating system >= "6.0" as version}
	prefetch handle.zip sha1:C5B70A8A8B485FA4A5F23C453CB75507480CECC2 size:908905 https://download.sysinternals.com/files/Handle.zip sha256:524E61547C8E26608CDA1B11B6E9471616CCCC48530F6E7EC9131EABF839357E
elseif {version of operating system < "6.0" as version}
	prefetch handle.zip sha1:D649CC5437B6F867CC3A905389D8C72F7B5922DD size:228012 http://web.archive.org/web/20130508165540if_/http://download.sysinternals.com/files/Handle.zip sha256:DD128A80739011226C5E76172DB03FFA6D4FDEA9E3A723AC82B26C7C74EAEC4D
else
	exit 100
endif

utility __Download\unzip.exe

parameter "DataDir" = "{pathname of data folder of client}/__Global/Verve/Detections/Log4j"

// handle64.exe and handle.exe are now sitting in __Download
waithidden __Download\unzip.exe -o "__Download\handle.zip" -d "__Download"

if {x64 of operating system}
	parameter "exe" = "handle64.exe"
else 
	parameter "exe" = "handle.exe"
endif

folder create "{parameter "DataDir"}"

delete "__createfile"
delete "run.bat"

createfile until _end_
"__Download\{parameter "exe"}" -p javaw.exe log4j {if (version of operating system < "6.0" as version) then ("-accepteula -nobanner") else ("")} > "{parameter "DataDir"}\openhandles.temp.log"
"__Download\{parameter "exe"}" -p java.exe log4j {if (version of operating system < "6.0" as version) then ("-accepteula -nobanner") else ("")} >> "{parameter "DataDir"}\openhandles.temp.log"
"__Download\{parameter "exe"}" -p javadoc.exe log4j {if (version of operating system < "6.0" as version) then ("-accepteula -nobanner") else ("")} >> "{parameter "DataDir"}\openhandles.temp.log"
"__Download\{parameter "exe"}" -p javac.exe log4j {if (version of operating system < "6.0" as version) then ("-accepteula -nobanner") else ("")} >> "{parameter "DataDir"}\openhandles.temp.log"
_end_

move __createfile run.bat

delete "{parameter "DataDir"}\openhandles.temp.log"
delete "{parameter "DataDir"}\openhandles.log"

waithidden run.bat

move "{parameter "DataDir"}\openhandles.temp.log" "{parameter "DataDir"}\openhandles.log"

notify client ForceRefresh

// Check if the client has Powershell and exit if they don't 
if {not exists values "Path" of keys "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\PowerShell\1\ShellIds\Microsoft.PowerShell" of native registry)}
	exit 101
endif

delete __createfile
delete WriteEventLog.ps1

createfile until _end_
param (
	[string] $HandleLogPath = (join-path $PSScriptroot "openhandles.log")
)

Function New-WinEventLog {{
	param (
		[string[]] $ExtraData
	)
	$EventLog = "Application"
	$EventSource = "Verve Log4j Detector"
	$EventID = "4228"

	#These are just examples to pass as parameters to the event

	#Load the event source to the log if not already loaded. This will fail if the event source is already assigned to a different log.
	if ([System.Diagnostics.EventLog]::SourceExists($EventSource) -eq $false) {{
		[System.Diagnostics.EventLog]::CreateEventSource($EventSource, $EventLog)
	}

	$NewEvent = New-Object System.Diagnostics.EventLog;


	$NewEvent.Log = $EventLog;
	$NewEvent.Source = $EventSource;
	$NewEvent.WriteEvent((New-Object System.Diagnostics.EventInstance($EventID, 1)), @($ExtraData))

}

if (-not (test-path $HandleLogPath)) {{
	throw "No handle log provided."
}

$RawContent = (get-content -raw $HandleLogPath).split("`r`n")

$Content = $RawContent | Where {{ -not [string]::isnullorwhitespace($_) } | Where {{$_ -notlike "*No matching handles*"} | Where {{$_ -like "*.jar*"}

$SeenPaths = New-Object System.Collections.Generic.HashSet[string]

$Detections = Foreach ($Handle in $Content) {{
	$Groups = $Handle.Split(": ")

	$Path = $Groups[-1]

	if ($SeenPaths.Contains($Path)) {{
		write-host "Skipping Duplicate: $Path"
	}
	else {{
		[void] ($SeenPaths.Add($Path))
		write-host "Processing Path: $Path"
	}

	$Filename = $Path.split("\")[-1]

	$Basename = $Filename.trim(".jar")

	$Components = $Basename.split("-")

	$Versions = @($Components.Where{{$_ -as [version] -is [version]})

	if ($Versions.count -ne 1) {{ write-error "Could not parse version: $Basename" -erroraction continue ; continue;}

	$Version = $Versions[0]

	$VersionAsString = $Version
	$VersionAsVersion = [version] $Version

	$Vulnerable = ($VersionAsVersion -ge [version] "2.0") -and ($VersionAsVersion -lt [version] "2.16")

	write-output @{{
		"Path" = $Path
		"FileName" = $Filename
		"Version" = $VersionAsString
		"Vulnerable" = $Vulnerable
	}
}

foreach ($Detection in $Detections) {{
	$Message = "Log4j JAR in Use scanner detected a Log4j JAR at $($Detection.Path) with version $($Detection.Version)"
	New-WinEventLog -ExtraData @($Message, $Detection.Path, $Detection.FileName, $Detection.Version, $Detection.Vulnerable)
}

write-host "Completed Processing"
_end_

move __createfile WriteEventLog.ps1

waithidden { pathname of file ((it as string) of value "Path" of key "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\PowerShell\1\ShellIds\Microsoft.PowerShell" of native registry) } -ExecutionPolicy Bypass -File WriteEventLog.ps1 -HandleLogPath "{parameter "DataDir"}\openhandles.log"]]></ActionScript>
		</DefaultAction>
		<Action ID="Action1">
			<Description>
				<PreLink>Click </PreLink>
				<Link>here</Link>
				<PostLink> to run the scanner.</PostLink>
			</Description>
			<ActionScript MIMEType="application/x-Fixlet-Windows-Shell"><![CDATA[action uses wow64 redirection {not x64 of operating system}

prefetch unzip.exe sha1:E1652B058195DB3F5F754B7AB430652AE04A50B8 size:167936 http://software.bigfix.com/download/redist/unzip-5.52.exe sha256:8D9B5190AACE52A1DB1AC73A65EE9999C329157C8E88F61A772433323D6B7A4A

if {version of operating system >= "6.0" as version}
	prefetch handle.zip sha1:C5B70A8A8B485FA4A5F23C453CB75507480CECC2 size:908905 https://download.sysinternals.com/files/Handle.zip sha256:524E61547C8E26608CDA1B11B6E9471616CCCC48530F6E7EC9131EABF839357E
elseif {version of operating system < "6.0" as version}
	prefetch handle.zip sha1:D649CC5437B6F867CC3A905389D8C72F7B5922DD size:228012 http://web.archive.org/web/20130508165540if_/http://download.sysinternals.com/files/Handle.zip sha256:DD128A80739011226C5E76172DB03FFA6D4FDEA9E3A723AC82B26C7C74EAEC4D
else
	exit 100
endif

utility __Download\unzip.exe

parameter "DataDir" = "{pathname of data folder of client}/__Global/Verve/Detections/Log4j"

// handle64.exe and handle.exe are now sitting in __Download
waithidden __Download\unzip.exe -o "__Download\handle.zip" -d "__Download"

if {x64 of operating system}
	parameter "exe" = "handle64.exe"
else 
	parameter "exe" = "handle.exe"
endif

folder create "{parameter "DataDir"}"

delete "__createfile"
delete "run.bat"

createfile until _end_
"__Download\{parameter "exe"}" -p javaw.exe log4j {if (version of operating system < "6.0" as version) then ("-accepteula -nobanner") else ("")} > "{parameter "DataDir"}\openhandles.temp.log"
"__Download\{parameter "exe"}" -p java.exe log4j {if (version of operating system < "6.0" as version) then ("-accepteula -nobanner") else ("")} >> "{parameter "DataDir"}\openhandles.temp.log"
"__Download\{parameter "exe"}" -p javadoc.exe log4j {if (version of operating system < "6.0" as version) then ("-accepteula -nobanner") else ("")} >> "{parameter "DataDir"}\openhandles.temp.log"
"__Download\{parameter "exe"}" -p javac.exe log4j {if (version of operating system < "6.0" as version) then ("-accepteula -nobanner") else ("")} >> "{parameter "DataDir"}\openhandles.temp.log"
_end_

move __createfile run.bat

delete "{parameter "DataDir"}\openhandles.temp.log"
delete "{parameter "DataDir"}\openhandles.log"

waithidden run.bat

move "{parameter "DataDir"}\openhandles.temp.log" "{parameter "DataDir"}\openhandles.log"

notify client ForceRefresh]]></ActionScript>
		</Action>
	</Fixlet>
</BES>
