<?xml version="1.0" encoding="UTF-8"?>
<BES xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="BES.xsd">
	<Fixlet>
		<Title>Invoke - Apply Verve Log4j Mitigation - Windows</Title>
		<Description><![CDATA[<P>Invokes the Verve Log4j Full System Scan&nbsp;to detect if there are any Log4j JARs on the system. The Fixlets, "Warning - Verve Log4j Detector reports CVE-####-#### - Universal" will become relevant on machines with vulnerable Log4j versions shortly after this Fixlet completes.</P>
<P>To target only&nbsp;systems actively running java, target the computer group "Systems running Java Processes" that was packaged with this fixlet.</P>
<P><STRONG>Notes<BR></STRONG>This&nbsp;Fixlet does look within all JAR, WAR, EAR, AAR, etc files on the entire disk to see if Log4j is embedded inside of them -- as a result, this Fixlet has a high impact on the system, requires a portable JRE and takes more time.&nbsp;If you do not need this added functionality see the Verve Log4j Detector or Verve Log4j Enhanced Detector.</P>
<P>This Fixlet takes into account whether or not the JNDI class has been removed from the JAR before marking it as vulnerable.</P>
$$all-copyright$$]]></Description>
		<Relevance>windows of operating system</Relevance>
		<Relevance><![CDATA[$$windows-xp-plus$$]]></Relevance>
		<Relevance><![CDATA[$$all-exists-result$$]]></Relevance>
		<Category></Category>
		<Source>Internal</Source>
		<SourceID></SourceID>
		<SourceReleaseDate>2021-12-19</SourceReleaseDate>
		<SourceSeverity></SourceSeverity>
		<CVENames></CVENames>
		<SANSID></SANSID>
		<MIMEField>
			<Name>x-fixlet-modification-time</Name>
			<Value>Mon, 20 Dec 2021 02:53:23 +0000</Value>
		</MIMEField>
		<Domain>BESC</Domain>
		<DefaultAction ID="Action1">
			<Description>
				<PreLink>Click </PreLink>
				<Link>here</Link>
				<PostLink> to deploy this action.</PostLink>
			</Description>
			<ActionScript MIMEType="application/x-Fixlet-Windows-Shell">// This Fixlet is templated. Do not directly edit.
			
parameter "LogpressoMode" = "Remediation"

// This uses the result of a previous scan as input

$$all-prepare-directories$$

$$all-get-existing-type$$

$$windows-prefetch-unzip$$

$$all-mark-start$$

$$windows-prefetch-openjre$$

$$all-prefetch-logpresso$$

$$windows-expand-jre$$
$$all-find-java$$

$$all-convert-result.out-to-logpresso-paths.in$$

$$all-prepare-logpresso-remediate$$

$$all-wait-logpresso-script$$

$$all-normalize-logpresso$$

$$all-mark-completion$$

$$all-validate-logpresso-result$$
</ActionScript>
			<SuccessCriteria Option="RunToCompletion"></SuccessCriteria>
		</DefaultAction>
	</Fixlet>
</BES>
