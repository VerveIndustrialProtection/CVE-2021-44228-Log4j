<?xml version="1.0" encoding="UTF-8"?>
<BES xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="BES.xsd">
	<Fixlet>
		<Title>Invoke - Verve Log4j Enhanced Detector - Windows</Title>
		<Description><![CDATA[<P>Invokes the Verve Log4j Enhanced Detector to detect if any running processes have Log4j loaded or if they have a JAR/WAR/EAR/AAR loaded that contains Log4j. There are two actions available, one that looks at all processes and one that just looks at Java processes.&nbsp;The Fixlets, "Warning - Verve Log4j Detector reports CVE-####-#### - Universal" will become relevant on machines with vulnerable Log4j versions shortly after this Fixlet completes.</P>
<P>To target only&nbsp;systems actively running java, target the computer group "Systems running Java Processes" that was packaged with this fixlet.</P>
<P><STRONG>Notes<BR></STRONG>This&nbsp;Fixlet does look within JAR, WAR, EAR, AAR, etc files to see if Log4j is embedded inside of them -- as a result, this Fixlet has a higher impact on the system, requires a portable JRE and takes more time.&nbsp;If you do not need this added functionality see the Verve Log4j Detector.</P>
<P>This Fixlet takes into account whether or not the JNDI class has been removed from the JAR before marking it as vulnerable.</P>
<P><STRONG>Testing</STRONG><BR>You should always test all BigFix content on a representative set of test systems before applying it to production systems. Do not apply content you have not reviewed, tested, and have a real understanding of how it will impact your systems.</P>
<P><STRONG>Copyright Verve Industrial Protection 2021</STRONG><BR>This content is produced, maintained and copyrighted by Verve Industrial Protection. You may use and distribute this content freely but you may not remove this notice. If you modify this content or derive other content from this content you must make the modified content available for free under these same terms. This content carries no Express or Implied Warranty. THE LICENSED PROPERTY IS PROVIDED "AS IS", WITH ALL FAULTS. THERE ARE NO WARRANTIES OR GUARANTEES, EXPRESS OR IMPLIED, RELATING TO THE VERVE INDUSTRIAL PROTECTION IP, THE PROPRIETARY KNOWLEDGE, OR OTHER SERVICES OR PRODUCTS TO BE PROVIDED HEREUNDER, OR ANY PROSPECTS OR OUTCOME THEREOF. VERVE INDUSTRIAL PROTECTION DISCLAIMS ANY AND ALL, AND INSTRUCTOR ACKNOWLEDGES AND AGREES THAT THERE ARE NO, REPRESENTATIONS, WARRANTIES, COVENANTS, OR CONDITIONS, WHETHER EXPRESS, IMPLIED, ARISING AT LAW, IN EQUITY, OR BY CUSTOM OF TRADE, STATUTORY OR OTHERWISE, ORAL OR WRITTEN, INCLUDING WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, TITLE OR QUIET ENJOYMENT. FURTHER, VERVE INDUSTRIAL PROTECTION DOES NOT WARRANT THAT THE LICENSED PROPERTY IS ERROR-FREE OR WILL BE AVAILABLE AT ALL TIMES OR OPERATE WITHOUT INTERRUPTION. NO ORAL OR WRITTEN INFORMATION OR ADVICE GIVEN BY VERVE INDUSTRIAL PROTECTION, ITS AGENTS, OR ITS EMPLOYEES, AT ANY TIME SHALL CREATE A WARRANTY OF ANY KIND. SOME STATES OR JURISDICTIONS DO NOT ALLOW THE EXCLUSION OF EXPRESS OR IMPLIED WARRANTIES, SO THE ABOVE EXCLUSION MAY NOT APPLY TO YOU. IN THAT EVENT, WARRANTIES SHALL ONLY BE IMPOSED TO THE EXTENT DETERMINED BY A COURT OF COMPETENT JURISDICTION AS REQUIRED BY APPLICABLE LAW.<BR></P>
]]></Description>
		<Relevance>windows of operating system</Relevance>
		<Relevance><![CDATA[version of operating system >= "5.1"]]></Relevance>
		<Relevance><![CDATA[(not exists modification times whose (it > (now - 30 * minute)) of files "start.out" of folders "__Global/Verve/Detections/Log4j/Recent" of data folders of client)]]></Relevance>
		<Category></Category>
		<Source>Verve Industrial Protection</Source>
		<SourceID></SourceID>
		<SourceReleaseDate>2021-12-17</SourceReleaseDate>
		<SourceSeverity></SourceSeverity>
		<CVENames></CVENames>
		<SANSID></SANSID>
		<MIMEField>
			<Name>x-fixlet-modification-time</Name>
			<Value>Mon, 20 Dec 2021 01:30:08 +0000</Value>
		</MIMEField>
		<Domain>BESC</Domain>
		<DefaultAction ID="Action2">
			<Description>
				<PreLink>Click </PreLink>
				<Link>here</Link>
				<PostLink><![CDATA[&nbsp;to inspect all processes for vulnerable embedded Log4j components.]]></PostLink>
			</Description>
			<ActionScript MIMEType="application/x-Fixlet-Windows-Shell"><![CDATA[// This Fixlet is templated. Do not directly edit.
parameter "Type" = "Enhanced Detection"
parameter "LogpressoMode" = "Detection"

// Start: all-prepare-directories
parameter "DataDir" = "{pathname of data folder of client}/__Global/Verve/Detections/Log4j/Running"
parameter "OutputDir" = "{pathname of data folder of client}/__Global/Verve/Detections/Log4j/Recent"
parameter "RuntimeDir" = "{pathname of data folder of client}/__Global/Verve/Detections/Log4j/Runtime"

folder delete "{parameter "DataDir"}"
folder create "{parameter "DataDir"}"

if {windows of operating system}
	folder delete "{parameter "RuntimeDir"}"
elseif {unix of operating system}
	wait /bin/bash -c 'rm -rf "{parameter "RuntimeDir"}"'
endif

folder create "{parameter "RuntimeDir"}"
// End: all-prepare-directories

// Start: windows-prefetch-unzip
prefetch unzip.exe sha1:E1652B058195DB3F5F754B7AB430652AE04A50B8 size:167936 http://software.bigfix.com/download/redist/unzip-5.52.exe sha256:8D9B5190AACE52A1DB1AC73A65EE9999C329157C8E88F61A772433323D6B7A4A

utility __Download\unzip.exe
// End: windows-prefetch-unzip

// Start: windows-prefetch-handle
prefetch unzip.exe sha1:E1652B058195DB3F5F754B7AB430652AE04A50B8 size:167936 http://software.bigfix.com/download/redist/unzip-5.52.exe sha256:8D9B5190AACE52A1DB1AC73A65EE9999C329157C8E88F61A772433323D6B7A4A

if {version of operating system >= "6.0" as version}
	prefetch handle.zip sha1:C5B70A8A8B485FA4A5F23C453CB75507480CECC2 size:908905 https://download.sysinternals.com/files/Handle.zip sha256:524E61547C8E26608CDA1B11B6E9471616CCCC48530F6E7EC9131EABF839357E
	parameter "handleExtraCmdline" = "-accepteula -nobanner"
elseif {version of operating system < "6.0" as version}
	prefetch handle.zip sha1:D649CC5437B6F867CC3A905389D8C72F7B5922DD size:228012 http://web.archive.org/web/20130508165540if_/http://download.sysinternals.com/files/Handle.zip sha256:DD128A80739011226C5E76172DB03FFA6D4FDEA9E3A723AC82B26C7C74EAEC4D
	parameter "handleExtraCmdline" = ""
endif

utility __Download\unzip.exe

// Setup Handle for usage
waithidden __Download\unzip.exe -o "__Download\handle.zip" -d "__Download"

if {x64 of operating system}
	parameter "handle" = "__Download\handle64.exe"
else 
	parameter "handle" = "__Download\handle.exe"
endif

// End: windows-prefetch-handle

// Start: all-mark-start
delete __appendfile
appendfile {now}
move __appendfile "{parameter "DataDir"}/start.out
// End: all-mark-start

// Start: windows-wait-handle-relevantextensions
delete __appendfile
delete run.bat

appendfile "{parameter "handle"}" .jar {parameter "handleExtraCmdline"}    > "{parameter "DataDir"}\openhandles.temp.out"
appendfile "{parameter "handle"}" .war {parameter "handleExtraCmdline"}    >> "{parameter "DataDir"}\openhandles.temp.out"
appendfile "{parameter "handle"}" .aar {parameter "handleExtraCmdline"}    >> "{parameter "DataDir"}\openhandles.temp.out"
appendfile "{parameter "handle"}" .ear {parameter "handleExtraCmdline"}    >> "{parameter "DataDir"}\openhandles.temp.out"
appendfile "{parameter "handle"}" .nar {parameter "handleExtraCmdline"}    >> "{parameter "DataDir"}\openhandles.temp.out"

move __appendfile run.bat

delete "{parameter "DataDir"}\openhandles.temp.out"
delete "{parameter "DataDir"}\openhandles.out"

wait run.bat
// End: windows-wait-handle-relevantextensions

// Start: windows-validate-handle-result
// Unknown exit code, end
continue if {exit code of action = 0 or exit code of action = 1}

// Handle printed its usage info so we messed up the command line
continue if {not exists lines whose (it contains "No arguments will dump all file references.") of files "openhandles.temp.out" of folders (parameter "DataDir")}

move "{parameter "DataDir"}\openhandles.temp.out" "{parameter "DataDir"}\openhandles.out"
// End: windows-validate-handle-result

// Start: windows-prefetch-openjre
if {x64 of operating system}
	prefetch openjre.zip sha1:69230F2F769A30334BB2F6314E39BBD9F43FA6EF size:46639244 https://builds.openlogic.com/downloadJDK/openlogic-openjdk-jre/8u292-b10/openlogic-openjdk-jre-8u292-b10-windows-x64.zip sha256:65A77C31DC93970D88E39D1D9B77CD9EA5EF93F1156352D50BEC652E08D21D2C
elseif {not x64 of operating system}
	prefetch openjre.zip sha1:93D5CFEA1B4E5D26B99E3A1EF005D3D961AAD2B1 size:45731200 https://builds.openlogic.com/downloadJDK/openlogic-openjdk-jre/8u292-b10/openlogic-openjdk-jre-8u292-b10-windows-x32.zip sha256:D7116267B08FDB7E5B2EF5F59C103D784DBF64B53B1FAE509111CC563934661A
endif
// End: windows-prefetch-openjre

// Start: all-prefetch-logpresso
prefetch logpresso.jar sha1:82143397A46B6440A78A3AC2D7D790B05698B4C3 size:642017 https://github.com/logpresso/CVE-2021-44228-Scanner/releases/download/v2.6.5/logpresso-log4j2-scan-2.6.5.jar sha256:7F43629DD950F71F8B6395B41DFD662A9519D4E351032C0DB500E93D0B19E217

parameter "logpresso" = "__Download/logpresso.jar"
// End: all-prefetch-logpresso

if {exists lines whose (it contains "type: File") of files "openhandles.out" of folders (parameter "DataDir")}

	// Start: windows-expand-jre
	waithidden __Download\unzip.exe -o "__Download\openjre.zip" -d "{parameter "RuntimeDir"}"
	continue if {exit code of action = 0}
	// End: windows-expand-jre
	// Start: all-find-java
	parameter "java" = "{pathnames of files ("java";"java.exe") of folders "bin" of folders of folders (parameter "RuntimeDir")}"
	continue if {(parameter "java") != ""}
	// End: all-find-java
	
	// Start: windows-prepare-logpresso-input
	delete "__appendfile"
	delete "{parameter "DataDir"}\logpresso-paths.in"
	
	appendfile {concatenations "%0a" of unique values of (following text of last ": " of it) of lines whose (it contains "type: File") of file "openhandles.out" of folder (parameter "DataDir")}
	
	move __appendfile "{parameter "DataDir"}\logpresso-paths.in"
	// End: windows-prepare-logpresso-input
	
	// Start: all-prepare-logpresso-specific-files
	delete "{parameter "DataDir"}/logpresso-results.json"
	delete __appendfile
	
	appendfile "{parameter "java"}" -jar "{parameter "logpresso"}" -f "{pathnames of files "logpresso-paths.in" of folders (parameter "DataDir")}" --report-json --report-path "{parameter "DataDir"}{if (windows of operating system) then ("\") else ("/")}logpresso-results.json" > "{parameter "DataDir"}{if (windows of operating system) then ("\") else ("/")}logpresso.log"
	// End: all-prepare-logpresso-specific-files

	// Start: all-wait-logpresso-script
	if { windows of operating system} 
	
		delete run.bat
		move __appendfile run.bat
	
		waithidden run.bat
	
	elseif {unix of operating system}
	
		delete run.sh
		move  __appendfile run.sh
	
		wait /bin/bash run.sh
	
	endif
	
	// Save our result so that we can cleanup the runtime and then handle it.
	parameter "success" = "{exists true whose (if true then ((exit code of action = 0) or (exit code of action = 1) or (exit code of action = 2)) else false)}"
	
	// Remove the Java Runtime before checking success
	if {windows of operating system}
		folder delete "{parameter "RuntimeDir"}"
	elseif {unix of operating system}
		delete __appendfile
		appendfile rm -rf "{parameter "RuntimeDir"}"
	
		delete cleanup.sh	
		move __appendfile cleanup.sh
	
		wait /bin/bash cleanup.sh
	endif
	
	// Do not proceed of logpresso errored out. This lets us fail the action
	continue if {(parameter "success") as boolean}
	
	// Make sure our logpresso log actually has something in it
	continue if {(it > 3) of number of lines of files "logpresso.log" of folder (parameter "DataDir")}
	
	
	// Make sure our logpresso result actually has something in it
	continue if {(it > 3) of number of lines of files "logpresso-results.json" of folder (parameter "DataDir")}
	// End: all-wait-logpresso-script
	
	// Start: all-normalize-logpresso
	// Pre-parse the output results 
	delete __appendfile
	appendfile {concatenations "%0d" of (it as string) of (item 0 of item 0 of it, item 1 of item 0 of it, item 2 of item 0 of it, item 1 of it) of (((values of keys "version" of it as string , values of keys "status" of it as string, values of keys "fixed" of it as string )) of elements of values of key "reports" of it,value of key "path" of it as string ) of elements of values of keys whose (name of it = "files") of jsons of files "logpresso-results.json" of folders (parameter "DataDir")}
	move __appendfile "{parameter "DataDir"}/parsed.out"
	
	// Process Vulnerable with no Fix
	delete __appendfile
	appendfile {concatenations "%0d" of (it as string) of (tuple string item 0 of it, tuple string item 3 of it) of it whose (tuple string item 1 of it = "VULNERABLE" and tuple string item 2 of it = "false") of lines of files "parsed.out" of folders (parameter "DataDir")}
	
	// In remediation mode these are the ones that were not fixed for one reason or another
	if {(parameter "LogpressoMode") = "Remediation"}
		copy __appendfile "{parameter "DataDir"}/notfixed.out"
	endif
	
	move __appendfile "{parameter "DataDir"}/vulnerable.out"
	
	// Process Vulnerable with with Fix
	delete __appendfile
	appendfile {concatenations "%0d" of (it as string) of (tuple string item 0 of it, tuple string item 3 of it) of it whose (tuple string item 1 of it = "VULNERABLE" and tuple string item 2 of it = "true") of lines of files "parsed.out" of folders (parameter "DataDir")}
	move __appendfile "{parameter "DataDir"}/fixed.out"
	
	// Process Mitigated
	delete __appendfile
	appendfile {concatenations "%0d" of (it as string) of (tuple string item 0 of it, tuple string item 3 of it) of it whose (tuple string item 1 of it = "MITIGATED") of lines of files "parsed.out" of folders (parameter "DataDir")}
	move __appendfile "{parameter "DataDir"}/mitigated.out"
	
	// Process Scan Errors
	delete __appendfile
	appendfile {concatenations "%0d" of (it as string) of values of keys "error" of elements of values of keys whose (name of it = "errors") of jsons of files "logpresso-results.json" of folders (parameter "DataDir")}
	move __appendfile "{parameter "DataDir"}/errors.out"
	// End: all-normalize-logpresso

endif

// Start: all-mark-completion
delete __appendfile
appendfile {parameter "Type"}
move __appendfile "{parameter "DataDir"}/type.out"

delete __appendfile
appendfile {now}
move __appendfile "{parameter "DataDir"}/end.out"

folder delete "{parameter "OutputDir"}"
move "{parameter "DataDir"}" "{parameter "OutputDir"}"

notify client ForceRefresh
// End: all-mark-completion
]]></ActionScript>
			<SuccessCriteria Option="RunToCompletion"></SuccessCriteria>
		</DefaultAction>
	</Fixlet>
</BES>

