<?xml version="1.0" encoding="UTF-8"?>
<BES xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="BES.xsd">
	<Fixlet>
		<Title>Invoke - Verve Log4j Detector - Linux</Title>
		<Description><![CDATA[<P>This invokes the Verve Log4j Detector to look for open file handles of Log4j JAR files.</P>
<P>This will only be relevant on systems with java, javac, javaw, or&nbsp;javadoc&nbsp;currently running.</P>
<P>This outputs the file in a known location so it can be read by a BigFix analysis.</P>
<P>Not for public distribution. Copyright Verve Industrial Protection 2021</P>]]></Description>
		<Relevance>unix of operating system</Relevance>
		<Relevance>exists processes ("java";"javac";"javaw";"javadoc")</Relevance>
		<Relevance><![CDATA[not exists files "openhandles.log" whose (modification time of it > (now - (30 * minute))) of folders "/__Global/Verve/Detections/Log4j" of folders (pathname of data folder of client)]]></Relevance>
		<Category></Category>
		<Source>Verve Industrial Protection</Source>
		<SourceID></SourceID>
		<SourceReleaseDate>2021-12-15</SourceReleaseDate>
		<SourceSeverity></SourceSeverity>
		<CVENames></CVENames>
		<SANSID></SANSID>
		<MIMEField>
			<Name>x-fixlet-modification-time</Name>
			<Value>Thu, 16 Dec 2021 16:48:18 +0000</Value>
		</MIMEField>
		<Domain>BESC</Domain>
		<DefaultAction ID="Action1">
			<Description>
				<PreLink>Click </PreLink>
				<Link>here</Link>
				<PostLink> to deploy this action.</PostLink>
			</Description>
			<ActionScript MIMEType="application/x-Fixlet-Windows-Shell"><![CDATA[parameter "DataDir"    = "{pathname of data folder of client}/__Global/Verve/Detections/Log4j"
parameter "TempResult" = "{pathname of data folder of client}/__Global/Verve/Detections/Log4j/openhandles.temp.log"
parameter "OutResult"  = "{pathname of data folder of client}/__Global/Verve/Detections/Log4j/openhandles.log"

folder create "{parameter "DataDir"}"

delete __createfile
delete run.sh

createfile until _end_
# Find the Java processes on the system and get just their PIDs
pids=$(ps -ef | grep 'java\|javaw\|javac\|javadoc' | awk '{{print $2}')

# Iterate through all of the PIDs
IFS=$' ' readarray -t PIDS <<< "$pids"
for pid in "${{PIDS[@]}"; do
	
	# We avoid a dependency on lsof by interogating the fd directly
    if [[ -d /proc/$pid/fd ]]; then
		
		# the fd is a directory with links between file descriptor ids and the file on the filesystem
		# find all file descriptors that point to a log4j jar and write them to our results
        ls -l /proc/$pid/fd | grep ".jar" | grep "log4j" >> "{parameter "TempResult"}"
    fi
done
_end_

move __createfile run.sh

// Cleanup any old temporary results
delete {parameter "TempResult"}

wait /bin/sh run.sh

// Replace the existing output with our new results
delete {parameter "OutResult"}
copy {parameter "TempResult"} {parameter "OutResult"}
delete {parameter "TempResult"}

// Issue a refresh to speed up analysis result evaluation
notify client forcerefresh]]></ActionScript>
		</DefaultAction>
	</Fixlet>
</BES>
