<?xml version="1.0" encoding="UTF-8"?>
<BES xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="BES.xsd">
	<Fixlet>
		<Title>Invoke - Apply Verve Log4j Mitigation (Use at own risk) - Linux</Title>
		<Description><![CDATA[
<P>Invokes Verve Log4j Mitigation to remove the JNDI class from Log4j JARs detected on the system.</P>
<P>This does not mitigate the system until a reboot has occurred. This may fail to mitigate in-use files</P>
<P>Do not run this on systems that you do not have backups or snapshots for. This process modifies in-use application files and may render the application unusable.</P>
<P>This process does back up the old file, placing it with a .bak extension next to the original file.</P>
<P><STRONG>Testing</STRONG><BR>You should always test all BigFix content on a representative set of test systems before applying it to production systems. Do not apply content you have not reviewed, tested, and have a real understanding of how it will impact your systems.</P>
<P><STRONG>Copyright Verve Industrial Protection 2021</STRONG><BR>This content is produced, maintained and copyrighted by Verve Industrial Protection. You may use and distribute this content freely but you may not remove this notice. If you modify this content or derive other content from this content you must make the modified content available for free under these same terms. This content carries no Express or Implied Warranty. THE LICENSED PROPERTY IS PROVIDED "AS IS", WITH ALL FAULTS. THERE ARE NO WARRANTIES OR GUARANTEES, EXPRESS OR IMPLIED, RELATING TO THE VERVE INDUSTRIAL PROTECTION IP, THE PROPRIETARY KNOWLEDGE, OR OTHER SERVICES OR PRODUCTS TO BE PROVIDED HEREUNDER, OR ANY PROSPECTS OR OUTCOME THEREOF. VERVE INDUSTRIAL PROTECTION DISCLAIMS ANY AND ALL, AND INSTRUCTOR ACKNOWLEDGES AND AGREES THAT THERE ARE NO, REPRESENTATIONS, WARRANTIES, COVENANTS, OR CONDITIONS, WHETHER EXPRESS, IMPLIED, ARISING AT LAW, IN EQUITY, OR BY CUSTOM OF TRADE, STATUTORY OR OTHERWISE, ORAL OR WRITTEN, INCLUDING WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, TITLE OR QUIET ENJOYMENT. FURTHER, VERVE INDUSTRIAL PROTECTION DOES NOT WARRANT THAT THE LICENSED PROPERTY IS ERROR-FREE OR WILL BE AVAILABLE AT ALL TIMES OR OPERATE WITHOUT INTERRUPTION. NO ORAL OR WRITTEN INFORMATION OR ADVICE GIVEN BY VERVE INDUSTRIAL PROTECTION, ITS AGENTS, OR ITS EMPLOYEES, AT ANY TIME SHALL CREATE A WARRANTY OF ANY KIND. SOME STATES OR JURISDICTIONS DO NOT ALLOW THE EXCLUSION OF EXPRESS OR IMPLIED WARRANTIES, SO THE ABOVE EXCLUSION MAY NOT APPLY TO YOU. IN THAT EVENT, WARRANTIES SHALL ONLY BE IMPOSED TO THE EXTENT DETERMINED BY A COURT OF COMPETENT JURISDICTION AS REQUIRED BY APPLICABLE LAW.<BR></P>
]]></Description>
		<Relevance>Unix of Operating System</Relevance>
		<Relevance><![CDATA[exists files "result.out" whose (size of it > 1) of folders "__Global/Verve/Detections/Log4j/Recent" of data folders of client]]></Relevance>
		<Category></Category>
		<Source>Verve Industrial Protection</Source>
		<SourceID></SourceID>
		<SourceReleaseDate>2021-12-19</SourceReleaseDate>
		<SourceSeverity></SourceSeverity>
		<CVENames></CVENames>
		<SANSID></SANSID>
		<MIMEField>
			<Name>x-fixlet-modification-time</Name>
			<Value>Mon, 20 Dec 2021 02:53:01 +0000</Value>
		</MIMEField>
		<Domain>BESC</Domain>
		<DefaultAction ID="Action1">
			<Description>
				<PreLink>Click </PreLink>
				<Link>here</Link>
				<PostLink> to deploy this action.</PostLink>
			</Description>
			<ActionScript MIMEType="application/x-Fixlet-Windows-Shell">// This Fixlet is templated. Do not directly edit.
			
parameter "LogpressoMode" = "Remediation"

// This uses the result of a previous scan as input

// Start: all-prepare-directories
parameter "DataDir" = "{pathname of data folder of client}/__Global/Verve/Detections/Log4j/Running"
parameter "OutputDir" = "{pathname of data folder of client}/__Global/Verve/Detections/Log4j/Recent"
parameter "RuntimeDir" = "{pathname of data folder of client}/__Global/Verve/Detections/Log4j/Runtime"

folder delete "{parameter "DataDir"}"
folder create "{parameter "DataDir"}"

if {windows of operating system}
	folder delete "{parameter "RuntimeDir"}"
elseif {unix of operating system}
	wait /bin/bash -c 'rm -rf "{parameter "RuntimeDir"}"'
endif

folder create "{parameter "RuntimeDir"}"
// End: all-prepare-directories

// Start: all-get-existing-type
parameter "Type" = "{lines 1 of files "type.out" of folders (parameter "DataDir")}"
// End: all-get-existing-type

// Start: all-mark-start
delete __appendfile
appendfile {now}
move __appendfile "{parameter "DataDir"}/start.out
// End: all-mark-start

// Start: linux-prefetch-openjre
if {architecture of operating system = "x86_64"}
	prefetch openjre.tar.gz sha1:6A30C541FB7D141F8D34A1F2D5CA3B70FCF437FF size:41045860 https://builds.openlogic.com/downloadJDK/openlogic-openjdk-jre/8u292-b10/openlogic-openjdk-jre-8u292-b10-linux-x64.tar.gz sha256:B51EF522D35B23EE2469BB2324B365FFDD9773420329ECE675BDFCF1B9365AE4
else
	prefetch openjre.tar.gz sha1:2F9A0AC58A8A212473521321242E07CC76BD0EFE size:40585042 https://builds.openlogic.com/downloadJDK/openlogic-openjdk-jre/8u292-b10/openlogic-openjdk-jre-8u292-b10-linux-x32.tar.gz sha256:57211788D6B1BEA3AE0C47F61A97F3259FFA91019A29AB3055AD7C580ADF02CE
endif

// End: linux-prefetch-openjre

// Start: all-prefetch-logpresso
prefetch logpresso.jar sha1:BCAEB2CC198FD29EA0E5320BA2865E81B9A335BD size:59877 https://github.com/logpresso/CVE-2021-44228-Scanner/releases/download/v2.5.3/logpresso-log4j2-scan-2.5.3.jar sha256:3CD1FA397D518A0AC39ED333BE01B73B1857C92BEEAFEAFDAEDF790E41B7C0B0

parameter "logpresso" = "__Download/logpresso.jar"
// End: all-prefetch-logpresso

// Start: linux-expand-jre
wait tar --no-same-permissions --no-same-owner -xf "__Download/openjre.tar.gz" -C "{parameter "RuntimeDir"}"
continue if {exit code of action = 0}

// End: linux-expand-jre
// Start: all-find-java
parameter "java" = "{pathnames of files ("java";"java.exe") of folders "bin" of folders of folders (parameter "RuntimeDir")}"
continue if {(parameter "java") != ""}
// End: all-find-java

// Start: all-convert-result.out-to-logpresso-paths.in
delete __appendfile

appendfile {concatenations "%0d" of (tuple string items 1 of it) of lines of file "result.out" of folder (parameter "OutputDir")}

delete "{parameter "DataDir"}/logpresso-paths.in"
move __appendfile "{parameter "DataDir"}/logpresso-paths.in"
// End: all-convert-result.out-to-logpresso-paths.in

// Start: all-prepare-logpresso-remediate
delete "{parameter "DataDir"}/logpresso-results.json"
delete __appendfile

appendfile "{parameter "java"}" -jar "{parameter "logpresso"}" -f "{pathnames of files "logpresso-paths.in" of folders (parameter "DataDir")}" --force-fix  --report-json --report-path "{parameter "DataDir"}{if (windows of operating system) then ("\") else ("/")}logpresso-results.json" > "{parameter "DataDir"}{if (windows of operating system) then ("\") else ("/")}logpresso.log"

// End: all-prepare-logpresso-remediate

// Start: all-wait-logpresso-script
if { windows of operating system} 

	delete run.bat
	move __appendfile run.bat

	waithidden run.bat

elseif {unix of operating system}

	delete run.sh
	move  __appendfile run.sh

	wait /bin/bash run.sh

endif

// Save our result so that we can cleanup the runtime and then handle it.
parameter "success" = "{exists true whose (if true then ((exit code of action = 0) or (exit code of action = 1) or (exit code of action = 2)) else false)}"

// Remove the Java Runtime before checking success
if {windows of operating system}
	folder delete "{parameter "RuntimeDir"}"
elseif {unix of operating system}
	delete __appendfile
	appendfile rm -rf "{parameter "RuntimeDir"}"

	delete cleanup.sh	
	move __appendfile cleanup.sh

	wait /bin/bash cleanup.sh
endif

// Do not proceed of logpresso errored out. This lets us fail the action
continue if {(parameter "success") as boolean}

// Make sure our logpresso log actually has something in it
continue if {(it > 3) of number of lines of files "logpresso.log" of folder (parameter "DataDir")}


// Make sure our logpresso result actually has something in it
continue if {(it > 3) of number of lines of files "logpresso-results.json" of folder (parameter "DataDir")}
// End: all-wait-logpresso-script

// Start: all-normalize-logpresso
// Pre-parse the output results 
delete __appendfile
appendfile {concatenations "%0d" of (it as string) of (item 0 of item 0 of it, item 1 of item 0 of it, item 2 of item 0 of it, item 1 of it) of (((values of keys "version" of it as string , values of keys "status" of it as string, values of keys "fixed" of it as string )) of elements of values of key "reports" of it,value of key "path" of it as string ) of elements of values of keys "files" of jsons of files "logpresso-results.json" of folders (parameter "DataDir")}
move __appendfile "{parameter "DataDir"}/parsed.out"

// Process Vulnerable with no Fix
delete __appendfile
appendfile {concatenations "%0d" of (it as string) of (tuple string item 0 of it, tuple string item 3 of it) of it whose (tuple string item 1 of it = "VULNERABLE" and tuple string item 2 of it = "false") of lines of files "parsed.out" of folders (parameter "DataDir")}

// In remediation mode these are the ones that were not fixed for one reason or another
if {(parameter "LogpressoMode") = "Remediation"}
	copy __appendfile "{parameter "DataDir"}/notfixed.out"
endif

move __appendfile "{parameter "DataDir"}/vulnerable.out"

// Process Vulnerable with with Fix
delete __appendfile
appendfile {concatenations "%0d" of (it as string) of (tuple string item 0 of it, tuple string item 3 of it) of it whose (tuple string item 1 of it = "VULNERABLE" and tuple string item 2 of it = "true") of lines of files "parsed.out" of folders (parameter "DataDir")}
move __appendfile "{parameter "DataDir"}/fixed.out"

// Process Mitigated
delete __appendfile
appendfile {concatenations "%0d" of (it as string) of (tuple string item 0 of it, tuple string item 3 of it) of it whose (tuple string item 1 of it = "MITIGATED") of lines of files "parsed.out" of folders (parameter "DataDir")}
move __appendfile "{parameter "DataDir"}/mitigated.out"

// Process Scan Errors
delete __appendfile
appendfile {concatenations "%0d" of (it as string) of values of keys "errors" of elements of values of keys whose (name of it = "errors") of jsons of files "logpresso-results.json" of folders (parameter "DataDir")}
move __appendfile "{parameter "DataDir"}/errors.out"
// End: all-normalize-logpresso

// Start: all-mark-completion
delete __appendfile
appendfile {parameter "Type"}
move __appendfile "{parameter "DataDir"}/type.out"

delete __appendfile
appendfile {now}
move __appendfile "{parameter "DataDir"}/end.out"

folder delete "{parameter "OutputDir"}"
move "{parameter "DataDir"}" "{parameter "OutputDir"}"

notify client ForceRefresh
// End: all-mark-completion

// Start: all-validate-logpresso-result
continue if {exit code of action != 2}

// Check our error log
continue if {not exists lines whose (it as trimmed string != "") of files whose (name of it ends with "error.out") of folders (parameter "OutputDir")}

if {exists lines whose (it as trimmed string != "") of files "fixed.out" of folders (parameter "OutputDir")}
	action requires restart "log4j"
endif
// End: all-validate-logpresso-result</ActionScript>
			<SuccessCriteria Option="RunToCompletion"></SuccessCriteria>
		</DefaultAction>
	</Fixlet>
</BES>

